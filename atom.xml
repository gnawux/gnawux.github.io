<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>我有分寸</title>
  <id>http://wangxu.me/</id>
  <updated>2016-09-24T16:58:06+08:00</updated>
  <subtitle>某创业公司的看门大爷</subtitle>
  <link href="http://wangxu.me/"></link>
  <author>
    <name>我有分寸</name>
  </author>
  <entry>
    <title>Blog 迁移后记</title>
    <updated>2016-09-24T16:52:58+08:00</updated>
    <id>tag:wangxu.me,2016-09-24:/meta/2016/09/24/blog-to-hyper-2/index.html</id>
    <content type="html">&lt;p&gt;&lt;a href=&#34;/meta/2016/09/24/blog-to-hyper/&#34;&gt;前一偏贴出来&lt;/a&gt;有人评论&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;启动一个ubuntu的image, 然后exec进去安装软件。。。这不符合imutable server哲学&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;本来因为太简单，已经懒得再做 image 了，不过，既然有同学指出了，好吧，你们说得对，吃自己的狗粮要吃得正宗才对，于是，做个 image 吧。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;制作 Image&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;code&gt;Dockerfile&lt;/code&gt; 这么写&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;FROM ubuntu:xenial&#xA;MAINTAINER gnawux@gmail.com&#xA;RUN apt-get update; apt-get -y install git&#xA;COPY caddy /srv/&#xA;COPY entrypoint.sh /&#xA;ENTRYPOINT /entrypoint.sh&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;其中的 &lt;code&gt;entrypoint.sh&lt;/code&gt; 这么写，这样就不用把密码放到 image 里了，嘻嘻&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;#!/bin/bash&#xA;PASSWORD=password&#xA;if [ $# -ge 1 ] ; then&#xA;&#x9;if [ &amp;quot;x$1&amp;quot; != &amp;quot;x${1#/}&amp;quot;  ] ; then&#xA;&#x9;&#x9;exec &amp;quot;$@&amp;quot;&#xA;&#x9;fi&#xA;&#x9;PASSWORD=$1&#xA;fi&#xA;&#xA;cat &amp;gt; srv/Caddyfile &amp;lt;&amp;lt;-ENDFILE&#xA;wangsiyi.net {&#xA;        gzip&#xA;        root wangsiyi.net&#xA;        git {&#xA;                repo https://github.com/gnawux/wangsiyi.net&#xA;                branch gh-pages&#xA;                hook /update ${PASSWORD}&#xA;                hook_type github&#xA;                interval -1&#xA;        }&#xA;}&#xA;wangxu.me {&#xA;        gzip&#xA;        root wangxu.me&#xA;        git {&#xA;                repo https://github.com/gnawux/gnawux.github.io&#xA;                hook /update ${PASSWORD}&#xA;                hook_type github&#xA;                interval -1&#xA;        }&#xA;}&#xA;ENDFILE&#xA;&#xA;cd srv&#xA;./caddy -agree -email gnawux@gmail.com -host wangxu.me &amp;gt; /dev/stdout 2&amp;gt;/dev/stderr&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;上面注意， &lt;code&gt;entrypoint.sh&lt;/code&gt; 脚本一定要 block 住，不要退出，刚才我一不小心…… 发现怎么都秒退，这个错误太初级了啊，留在 commit log 里实在是比较丢人。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;然后，整个制作 image 也可以放在一个脚本里面，比如这样&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;#!/bin/bash&#xA;&#xA;if [ ! -f caddy ] ; then&#xA;&#x9;wget -O - &amp;quot;https://caddyserver.com/download/build?os=linux&amp;amp;arch=amd64&amp;amp;features=git&amp;quot; | tar -zxvf -&#xA;&#x9;rm -rf init *.txt&#xA;fi&#xA;&#xA;[ ! -f caddy ] &amp;amp;&amp;amp; echo &amp;quot;caddy download failed&amp;quot; &amp;amp;&amp;amp; exit 1&#xA;&#xA;sudo docker build -t &amp;quot;gnawux/blog:latest&amp;quot; .&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;所有这些我放到 repo 里了： &lt;a href=&#34;https://github.com/gnawux/xu-site&#34;&gt;https://github.com/gnawux/xu-site&lt;/a&gt; ，本来弄个 repo 我想自己写个 server 的，最后就放个 dockerfile，我也是挺失落的啊。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;运行&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;镜像制作好之后，推到 hub，就回到 hyper 来 run 吧&lt;/p&gt;&#xA;&#xA;&lt;p&gt;启动 ——&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;➜ ~ hyper run -p 80:80 -p 443:443 --name blog --hostname blog -it gnawux/blog xxxxxxx&#xA;Activating privacy features...2016/09/24 08:32:08 get directory at &#39;https://acme-v01.api.letsencrypt.org/directory&#39;: failed to get &amp;quot;https://acme-v01.api.letsencrypt.org/directory&amp;quot;: Get https://acme-v01.api.letsencrypt.org/directory: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;擦，访问不了，忘了绑 fip 了 ——&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;➜ ~ hyper fip attach 209.177.91.195 blog&#xA;➜ ~ hyper start -a -i blog&#xA;Activating privacy features... done.&#xA;Cloning into &#39;wangsiyi.net&#39;...&#xA;remote: Counting objects: 927, done.&#xA;remote: Total 927 (delta 0), reused 0 (delta 0), pack-reused 927&#xA;Receiving objects: 100% (927/927), 14.32 MiB | 4.47 MiB/s, done.&#xA;Resolving deltas: 100% (414/414), done.&#xA;Checking connectivity... done.&#xA;2016/09/24 08:35:22 https://github.com/gnawux/wangsiyi.net.git pulled.&#xA;Cloning into &#39;wangxu.me&#39;...&#xA;remote: Counting objects: 17080, done.&#xA;remote: Compressing objects: 100% (103/103), done.&#xA;remote: Total 17080 (delta 78), reused 0 (delta 0), pack-reused 16951&#xA;Receiving objects: 100% (17080/17080), 28.90 MiB | 5.77 MiB/s, done.&#xA;Resolving deltas: 100% (7924/7924), done.&#xA;Checking connectivity... done.&#xA;2016/09/24 08:35:28 https://github.com/gnawux/gnawux.github.io.git pulled.&#xA;https://wangsiyi.net&#xA;https://wangxu.me&#xA;http://wangsiyi.net&#xA;http://wangxu.me&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;一切 OK，大家好好玩。&lt;/p&gt;&#xA;</content>
    <link href="http://wangxu.me/meta/2016/09/24/blog-to-hyper-2/index.html"></link>
    <author>
      <name>gnawux</name>
    </author>
  </entry>
  <entry>
    <title>Blog 迁移</title>
    <updated>2016-09-24T11:08:08+08:00</updated>
    <id>tag:wangxu.me,2016-09-24:/meta/2016/09/24/blog-to-hyper/index.html</id>
    <content type="html">&lt;h2&gt;由来已久的念头&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;自从我把 &lt;a href=&#34;/meta/2015/02/24/blog-update/index.html&#34;&gt;Blog 迁移到 Github (迁移声明)&lt;/a&gt;，生活重新变得平静了，不用管 Wordpress 的升级了，不用管主机的事情了，什么都不用操心，DNS 指到 Github 就好了……&lt;/p&gt;&#xA;&#xA;&lt;p&gt;自从我用上了我司优秀青年严松的 &lt;a href=&#34;https://github.com/InkProject/ink&#34;&gt;ink&lt;/a&gt; 之后， blog 文章写作和发布也变得更简单通透了——如果有啥不满意就改改 blog 引擎，给作者发 PR，作为 CTO 强迫他&lt;a href=&#34;https://github.com/InkProject/ink/pulls?q=is%3Apr+author%3Agnawux&#34;&gt;接受 PR&lt;/a&gt;。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;然而，还是有一点点不爽——放在 Github 的 blog，是很难搞 SSL 的，即使是如今有 &lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt; 这样的免费服务，仍然无法方便利用……&lt;/p&gt;&#xA;&#xA;&lt;p&gt;随着，我家自己的 &lt;a href=&#34;https://hyper.sh&#34;&gt;Hyper_&lt;/a&gt; 上线，容器部署超简单，三秒上线，可以用小尺寸容器、独立 Floating IP，完美配合，于是，一直想着把自己和儿子的 Blog 迁移到 Hyper_ 上来。&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;更多需求&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;至于一直为啥没迁移，实际上我有点想做的事情——&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Github 自动触发更新：我的 blog 现在都是 github page 了，我想更新 Github 自动生效，无需手动部署&lt;/li&gt;&#xA;&lt;li&gt;简单的 image，不想弄复杂的程序和脚本&lt;/li&gt;&#xA;&lt;li&gt;配置 TLS：一直没弄明白 Let&amp;rsquo;s Encrypt&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;尤其是自动更新，乃至我都想自己写个 server—……&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;终于找到了&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Hyper_ 正式上线一个月，我发现好多用户都在用一个叫 &lt;a href=&#34;https://caddyserver.com/&#34;&gt;Caddy&lt;/a&gt; 的东西，于是就问了下同事，说是新一代的支持 HTTP/2 的 Server。想着是不是可能有我的需求，或者，反正是 Go 写的，不行没准能改改呢，于是就去看了一眼。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;哈，我找到了什么 —— &lt;a href=&#34;https://caddyserver.com/docs/git&#34;&gt;https://caddyserver.com/docs/git&lt;/a&gt; ——我最主要的需求居然已经被满足了，我可以这么配置&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;wangsiyi.net {&#xA;        gzip&#xA;        root wangsiyi.net&#xA;        git {&#xA;                repo https://github.com/gnawux/wangsiyi.net&#xA;                branch gh-pages&#xA;                hook /somehandle mypassword&#xA;                hook_type github&#xA;                interval -1&#xA;        }&#xA;}&#xA;wangxu.me {&#xA;        gzip&#xA;        root wangxu.me&#xA;        git {&#xA;                repo https://github.com/gnawux/gnawux.github.io&#xA;                hook /somehandle mypassword&#xA;                hook_type github&#xA;                interval -1&#xA;        }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;就这么简单，起服务，自动拉 repo；然后，在 Github 配上 webhook，有 push 的时候，自动更新 webroot 的内容……&lt;/p&gt;&#xA;&#xA;&lt;p&gt;（此处切换 DNS A 记录，并等待更新完毕——这个传说会很久，不过如今实际上还是挺快的）&lt;/p&gt;&#xA;&#xA;&lt;p&gt;于是，在 hyper 上开了一个 server （绑上 fip）来试下&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;hyper run -d --name blogs -p 80:80 -p 443:443 ubuntu&#xA;hyper fip attach 2xx.xx.xx.xx blogs&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;用 &lt;code&gt;hyper exec -it blogs&lt;/code&gt; 登上去，装上 &lt;code&gt;wget&lt;/code&gt;, &lt;code&gt;git&lt;/code&gt;，拉个有 &lt;code&gt;git&lt;/code&gt; 模块的 Caddy&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;wget -O caddy.tgz &amp;quot;https://caddyserver.com/download/build?os=linux&amp;amp;arch=amd64&amp;amp;features=git&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;解开之后，放上刚才的 &lt;code&gt;Caddyfile&lt;/code&gt;，运行 Caddy。 我看到了什么 —— 居然还啥都没做，就自动配好了 Let&amp;rsquo;s Encrypt 的 CA，现在，我的网站已经支持 SSL 了，Github hook 的配置也完全无痛，设个链接和密码就直接工作了，完全不需要调试。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;好吧，有点简单得超出我的预期，嗯，过两天再搞自己的 image 吧，本来就想试试的，没想到就 piu 地一下就切好了，真是太出乎预料了，欢迎大家访问：&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;我的 Blog（就是本站）: &lt;a href=&#34;https://wangxu.me&#34;&gt;https://wangxu.me&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;我家儿子的 Blog（有一段没更新了，很快更新）: &lt;a href=&#34;https://wangsiyi.net&#34;&gt;https://wangsiyi.net&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;以及，我闺女的 Blog （ Coming soon&amp;hellip;）&lt;/p&gt;&#xA;</content>
    <link href="http://wangxu.me/meta/2016/09/24/blog-to-hyper/index.html"></link>
    <author>
      <name>gnawux</name>
    </author>
  </entry>
  <entry>
    <title>Hyper_ GA &amp; Happy Birthday to Myself</title>
    <updated>2016-09-24T10:35:00+08:00</updated>
    <id>tag:wangxu.me,2016-09-24:/hyper/2016/08/13/hyper-ga/index.html</id>
    <content type="html">&lt;h2&gt;新闻一则: Hyper_ General Available&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;是的，经过大约 4 个月的从 Private Beta 到 Public Beta， Hyper_ (&lt;a href=&#34;https://www.hyper.sh&#34;&gt;www.hyper.sh&lt;/a&gt;) 终于 GA 了。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;相对于之前的 Beta 服务，我们仍然保持了“云端的单机”这一基本设定，以“免编排”、“免运维”为己任；并加入了端口映射、卷数据初始化、最小64M内存的超小型容器等特性。当然，另一个提升就是，我们换用了新的硬件服务集群，不再使用生产于2009年，被我们废物利用的旧服务器了，性能上有了相当的保证。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;欢迎试用，目前的用户，注册送 20 刀余额，当然，不可提现。（IP地址 $1/月，最小的容器大约 $1.03/月，能用来做什么你懂的）&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;正文：发布当天的日记&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;&lt;img data-src=&#34;/assets/sofar.jpg&#34; alt=&#34;感觉身体被掏空&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;经过了无数天的开发和调试，参加了无数次的争论，GA 的一天终于临近了，对于发布的日子，我上周随口说了下周四——周四其实是个不错的发布日子，前面留足调试时间，后面又和周末保持了合适的距离，有足够的弹性。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;然而，就在这天临近的时候，我忽然注意到，周四是我的生日——虽然我是 Hyper_ 的联合创始人中最为年轻的，可是也已经36岁了——在自己生日发布服务，这未免太中二了一点吧。于是，我们决定在周四将系统准备就绪，而等到周五再进行系统服务的切换，这样，我们于北京时间8月12日傍晚，太平洋时间（夏令时）8月12日凌晨上线了 Hyper_ GA 的系统。周末里，随着 DNS 记录的传播等，Hyper_ 正在逐步迎接用户，并将在周一正式发布英文的新闻稿。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;周四的晚上，大家紧张地进行了最后的调试，晚上快接近稳定的时候，我在音箱里放出了这首歌——&lt;a href=&#34;http://music.163.com/#/song?id=422427950&#34;&gt;网易云音乐链接&lt;/a&gt;、&lt;a href=&#34;http://www.bilibili.com/video/av5512579/&#34;&gt;B站链接&lt;/a&gt;。一时间，大家都感觉自己被掏空了。&lt;/p&gt;&#xA;&#xA;&lt;iframe frameborder=&#34;no&#34; border=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; width=330 height=86 src=&#34;http://music.163.com/outchain/player?type=2&amp;id=422427950&amp;auto=1&amp;height=66&#34;&gt;&lt;/iframe&gt;&#xA;&#xA;&lt;h3&gt;去年今日&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;一年前的这会儿，我们刚刚拆分出 runV 并提交到 OCI、参加了 ContainerCon/LinuxCon/Xen Developer Summit，虽然当时尚没有决定要不要做一个 Cloud，但是，至少当时开了一个头——我们开始了 Hypernetes 项目，这个项目成为了今天的 Hyper_ Cloud 的基础。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这个项目最初叫 HyperStack，意欲表达 Hyper 与 OpenStack 的集成，不过后来，因为 kubernetes 在这个系统中的重要地位，我们创造了一个新名词——Hypernetes，这一命名方式相当受欢迎，后面跟了无数的致敬者。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;到了今年，我们团队甚至在 Kubernetes 的官方 Blog 上发布了一篇客座 Blog，来介绍 hypernetes。所有这些都源自一年前的决定。&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;新宿之夜&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;去年10月底，东京品川，开了一年两度的 OpenStack Summit，在会上，我们第一次向人们介绍了 Hypernetes。展会之余的一天晚上，我和 Cofounder 两个人决定去新宿逛街——结果，俩人在新宿的一个咖啡馆吵了一晚上，要不要做自己的云服务，如果做，卖点是什么。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;话说做云，我一开始是拒绝的，作为盛大云的旧部，师承 UCloud 的季总、京东云的何总，回归美国的 Kelvin，以及刻通云的姜总，我深知做一个负责任的公有云是多么困难…… 不过，后来我终归还是被说服了——一来是因为，我们发现，在国外做其实比在国内做挑战略小一些，让不可能成为可能；二来，我也同意，如果我们不做，这个 startup 创立的开源项目可能永远只是个看上去很美却没人敢用的项目。于是，我们开始了……&lt;/p&gt;&#xA;&#xA;&lt;h3&gt;本命年（+虎头蛇尾的结语）&lt;/h3&gt;&#xA;&#xA;&lt;p&gt;2016年是我的本命年，36岁高龄的我继续担当我司的看门大爷兼CTO，传统上认为本命年是人生的一道坎。作为一个并不宿命论的人也不得不承认，今年对我的个人和家庭真的是多事之秋。（update: 发布之后又居然病倒了，连续四天39度+，不过还是幸存了下来）&lt;/p&gt;&#xA;&#xA;&lt;p&gt;不过，值此身体被掏空的日子，虽然感到，也许三十六岁的我不能和三十四五时候一样连续不眠不歇，但如今的我更清楚自己的使命和方向，还有一群优秀的同伙，这也让我可以寄望这本命年成为突破之年，愿今年 &lt;a href=&#34;https://hyper.sh&#34;&gt;Hyper_&lt;/a&gt; Cloud 的发布也能让大家感受到 IaaS &amp;amp; CaaS 再次被重新定义，也请大家一起期待后面更多的创新和突破。&lt;/p&gt;&#xA;</content>
    <link href="http://wangxu.me/hyper/2016/08/13/hyper-ga/index.html"></link>
    <author>
      <name>gnawux</name>
    </author>
  </entry>
  <entry>
    <title>我眼中的（云计算）标准化</title>
    <updated>2016-07-24T02:08:08+08:00</updated>
    <id>tag:wangxu.me,2016-07-24:/cloud/2016/07/24/standardization/index.html</id>
    <content type="html">&lt;p&gt;感谢组织，大概2009年到2011年期间，我曾经做过一段中国移动云计算开源与标准化方面的协调人，也先后代表中国移动和盛大云计算参与了一些云计算相关的标准化工作，因此小有一些发言权。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;遥想当年，和领导兼合作伙伴、标准化所（现在是标准化院）的周主任一起聊标准化的时候，有一个深切的感触——表面上看，标准化工作就是在设置门槛来限制准入者，这些限制似乎就是标准化的商机所在。然而，更加高瞻远瞩的标准化工作者，并不仅仅把眼光停留在评测和准入机制上，他们会把产业的发展趋势、国家和社会的需求体现到标准当中去。这里不仅仅是让参与标准制定的人给后来人设置难度，让后进入行业的人达到门槛的要求；也会通过给出科学的评测体系，让参与者有可以比较和竞争的依据；更有施展的空间，让创新者可以在不设门槛的地方大胆突破，超越前人。也正因为如此，标准化工作对参与人员的大局观和技术的理解力都有非常高的要求，过度标准化和缺乏标准对产业的发展同样是有害的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;简单举一个例子，对于互联网的数据中心（IDC），制冷是一个很重要的能力，因为全速运转的计算机会释放大量的热能，所以高档 IDC 会有很好的制冷能力，让服务器们冷酷到底。然而，当我们制定云计算标准的时候，是不是要对服务商的数据中心制冷能力有要求呢？这就不一定了，看看先进的数据中心设计理念——他们通过良好的 IDC 散热设计、改进的电源系统、更高的耐热能力、以及优良的集群管理调度系统，可以让系统在更高的温度下，甚至是不使用空调的自然风制冷的情况下，都可以工作，从而在节约大量的能源的情况下，达到相同甚至更好的服务质量。如果我们的标准要求了制冷能力，那么，这样的先进设计反而会被拒之门外，就完全违背了产业的发展方向了；相反，如果我们把服务可用性作为一个标杆，把能效指标作为一个评测指标，那么，通过比较，我们就可以看到哪些是真的更有能力的服务商了。两厢比较，高下立现。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;这只是一个简单的例子，我参与标准化的工作不算多，最近又接触了一些，有感而发，想把自己的一点心得分享给没怎么做过标准化工作的开源同仁。其实只要大家在做标准化的时候再站高一层，不局限在自己的公司视角，多想一想产业该如何发展，想一想我们对产业的责任，就知道该往什么方向努力、该回避什么东西了。&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;后记：其实标准化的意义在对等交互的场景特别突出——比如各种通信制式，而在计算机/云计算领域，大家更看重事实标准，开源在某种意义上说，是另一种标准化，有开放基金会背景的开源项目更是可以看作是代码/API形式的标准化。开源和标准化都是全社会的精神财富，而不仅仅是一个人、一个公司的，这一点，做开源和做标准化是非常类似的。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;</content>
    <link href="http://wangxu.me/cloud/2016/07/24/standardization/index.html"></link>
    <author>
      <name>gnawux</name>
    </author>
  </entry>
  <entry>
    <title>往事匆匆，来日茫茫，唯有你我，相伴久久</title>
    <updated>2016-07-08T12:08:08+08:00</updated>
    <id>tag:wangxu.me,2016-07-08:/family/2016/07/08/anniversary-9/index.html</id>
    <content type="html">&lt;p&gt;时间的鬼斧神工总是让人惊叹，一直觉得自己意气风发，可是在公司却像个看门大爷；一直觉得还在家庭生活的磨合期，可别人都在称赞我们儿女双全，两个孩子都在修剪玫瑰花束了。唉，我们不得不承认，已经结婚9年了。早上，我搬进卧室一从99朵玫瑰，告诉老婆今天是结婚纪念日，她惊愕地问今天是几号……&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img data-src=&#34;/assets/anniversary-9.jpg&#34; alt=&#34;九年纪念&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;9年前的今天，我们步入婚姻殿堂，很多亲友莅临；9年后的今天，当时的嘉宾好多还在我的朋友圈里，感谢他们与我们一起相伴走来；&lt;/p&gt;&#xA;&#xA;&lt;p&gt;9年前的今天，家族齐聚一堂，一起憧憬未来生活；9年后的今天，竟有亲人已然逝去，带给我们深深的伤感，也感谢他们曾与我们走过；&lt;/p&gt;&#xA;&#xA;&lt;p&gt;9年前的今天，每个人都说，“早生贵子啊”；9年后的今天，他们说，“你们好幸福啊，儿女双全”，感谢孩子们来到我们的生活中来，未来你们也要走自己的路；&lt;/p&gt;&#xA;&#xA;&lt;p&gt;9年前的今天，你我许下百年誓言；还好，9年后的今天，我们还在一起，继续着新婚的磨合期，我们每天的生活都是新的，唯有你我不变，相伴长长久久。&lt;/p&gt;&#xA;</content>
    <link href="http://wangxu.me/family/2016/07/08/anniversary-9/index.html"></link>
    <author>
      <name>gnawux</name>
    </author>
  </entry>
  <entry>
    <title>十八年前的那一次考试</title>
    <updated>2016-07-07T08:08:08+08:00</updated>
    <id>tag:wangxu.me,2016-07-07:/life/2016/07/07/exam-98/index.html</id>
    <content type="html">&lt;p&gt;十八年前，我十八岁，那年也有洪水，那年也有足球，那年法国队也表现不错，那年，我参加了高考。对称是我的最爱，这种人生的对称时刻，自然该写点东西记一下。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img data-src=&#34;/assets/france-98-r9.jpg&#34; alt=&#34;1998年，对于很多人的回忆都是苦涩的[1]&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;现在的年轻人可能不知道，十八年前的高考，是在7月份，而且有三天，那时候的北京，使用全国卷高考，而我，和今年谢工老师的公子一样，也在八一中学考点，而且，有那么点不尽如人意。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;十八年前的高考，本来一切波澜不惊，除了化学，都不怎么难，当然化学都是我的物理之外的第二强项，难，不怕。最后一天考物理，我头上方的电风扇不知怎么，呲哑哑响不停，似乎是什么不祥的预兆，不过，物理有什么可担心的么。然而，在最后一小时，一切都改变了。之后的十八年里，每次提到高考，我都会祥林嫂一样地重复这个故事——&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;比如我这个 SB，1998高考全国卷物理倒数第三道大题，洛沦兹力的符号推导题，圆周长公式代了 πr^2 进去，最后一道力学大题，少看了一个“摩擦力忽略不记”的条件，最后和清华线差5分。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;其实，每年高考都有一些失意的人，他们和我一样，自信有实力，可是偏偏强项发挥失常，以致前功尽弃，进而无法自拔。然而，时光荏苒而过，在工大和那么多同病相怜的孩子们一起，哭过以后，我们发现，其实，失常的都是强项，弱项哪有什么可以算得上失常的东西呢？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;高考之前，我也考砸过，小学考初中、初中考高中，全没考好。但高考是不同的，因为高考之后，我才真的开始思考为什么没做好、怎么能做好，开始不把问题推卸给运气、命之类的玄学上，也不放在心理、状态这些不可控的东西上，于是我才有了一步步的好转，不管是性格还是临场状态都开始变好。我明白，人不怕犯错，怕不思考，怕重复犯错，怕一辈子学不会怎么面对。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;举两个例子，第一个例子是关于性格的，我小时候的同学和我大学以后的同学、同事对我的印象是截然不同的。小时候的我是个非常内向、不敢说话的孩子（，其实我现在仍然有与人交往的恐惧症，更喜欢和计算机交流），但我相信，要成功需要更主动、更自信，于是，大学一开始，我就努力塑造自己主动的形象。我找到的一个方法是，把自己不敢做的事情说出来，说自己要做，然后，在大家的目光下逼着自己做，不管是做课程实验、课程设计，还是小组演讲，我都推着自己向前，同学们居然真的相信我擅长这些了（当然，他们这帮老司机可能根本就是自己懒得干），于是我经常地有各种机会，大一暑假就可以进入实验室了。这之后，我一步步地让自己脸皮变厚，甚至工作第一年的年会上反串《色戒》的王家芝这个角色，在移动研究院一炮走红。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;第二个例子是，当我准备考研的时候，除了复习功课，我开始全面的思考考试这个过程，而不仅仅是知识本身。我注意到，我过去的考试失常时刻，经常发生在连续几天考试的最后阶段，这个时候，身体疲惫可能是原因之一，所以，我在考研之前三个月开始坚持每天跑步，提高自己的心肺功能，以更好的身体状态面对马拉松式的考试，而且告诉自己，考研的考试每场有三个小时，中间一定要申请出来上一次厕所，活动一下，调整一下状态。这些准备不一定真的对考试有很多影响，但是努力调整至少会让自己相信自己做好了一切准备，会让自己更有信心地发挥出自己的水平。配合一点运气，我考上了北邮张平老师的研究生（，顺便说，张老师旗下的 WTI 是我国最好的无线通信方面的实验室之一，顺便推荐&lt;a href=&#34;http://wangxu.me/tag/zhihu/index.html&#34;&gt;我的知乎回答系列&lt;/a&gt;，真的是通信为主的），而这些运气，我相信是我通过自己的努力换来的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;现在的我，算不上成功，不过至少没有在高考后沉沦，这是一篇淡淡的鸡汤，送给那些高考不得意的同学——不思考，只想着受完就完了，基本上等着的是下一次失败，只有面对+思考+改进，才能真的避免同样的挫折。你现在需要的不是等着运气的青睐，而是面对自己，审视自己，改变自己，高考就是一个从此改变自己的机会。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;[1] 图片来源: &lt;a href=&#34;http://www.mirror.co.uk/sport/football/world-cup-2014/world-cup-unconscious-minutes-ahead-3667198&#34;&gt;http://www.mirror.co.uk/sport/football/world-cup-2014/world-cup-unconscious-minutes-ahead-3667198&lt;/a&gt;&lt;/p&gt;&#xA;</content>
    <link href="http://wangxu.me/life/2016/07/07/exam-98/index.html"></link>
    <author>
      <name>gnawux</name>
    </author>
  </entry>
  <entry>
    <title>Kubernetes 新项目 Frakti</title>
    <updated>2016-06-28T10:08:08+08:00</updated>
    <id>tag:wangxu.me,2016-06-28:/hyper/2016/06/28/frakti/index.html</id>
    <content type="html">&lt;p&gt;简讯：昨晚，在 kubernetes 组织下，新建了一个 repo，名为 &lt;a href=&#34;https://github.com/kubernetes/frakti&#34;&gt;frakti [1]&lt;/a&gt;，标志着 hyperContainer 以最 k8s 地方式融入 k8s 的开始。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;frakti 一名是我起的，如各位所知，&lt;a href=&#34;https://en.wikipedia.org/wiki/Kubernetes#History&#34;&gt;kubernetes 一名来自于舵手的希腊文 κυβερνήτης [2]&lt;/a&gt; ，&#xA;同样 frakti 也来自于&lt;a href=&#34;https://el.wikipedia.org/wiki/%CE%A6%CF%81%CE%B1%CE%BA%CF%84%CE%AE_(%CE%BD%CE%B1%CF%85%CF%80%CE%B7%CE%B3%CE%AF%CE%B1&#34;&gt;与船相关的希腊文——水密隔仓 Φρακτή [3]&lt;/a&gt;)，&#xA;这是一种通过隔离舱室，提高船的抗沉性的结构，据说最早由中国宋朝的朱彧引入（&lt;a href=&#34;https://en.wikipedia.org/wiki/Bulkhead_(partition&#34;&gt;参见wiki[4]&lt;/a&gt;#History)），&#xA; 这样的名字，对于我们来自中国的 &lt;a href=&#34;https://github.com/hyperhq/hyperd&#34;&gt;hyperContainer [5]&lt;/a&gt; 团队与 kubernetes&#xA; 的结合可能再合适不过了。&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;[1] &lt;a href=&#34;https://github.com/kubernetes/frakti&#34;&gt;https://github.com/kubernetes/frakti&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;[2] &lt;a href=&#34;https://en.wikipedia.org/wiki/Kubernetes#History&#34;&gt;https://en.wikipedia.org/wiki/Kubernetes#History&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;[3] &lt;a href=&#34;https://el.wikipedia.org/wiki/%CE%A6%CF%81%CE%B1%CE%BA%CF%84%CE%AE_(%CE%BD%CE%B1%CF%85%CF%80%CE%B7%CE%B3%CE%AF%CE%B1&#34;&gt;https://el.wikipedia.org/wiki/%CE%A6%CF%81%CE%B1%CE%BA%CF%84%CE%AE_(%CE%BD%CE%B1%CF%85%CF%80%CE%B7%CE%B3%CE%AF%CE%B1&lt;/a&gt;)&lt;/li&gt;&#xA;&lt;li&gt;[4] &lt;a href=&#34;https://en.wikipedia.org/wiki/Bulkhead_(partition)#History&#34;&gt;https://en.wikipedia.org/wiki/Bulkhead_(partition)#History&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;[5] &lt;a href=&#34;https://github.com/hyperhq/hyperd&#34;&gt;https://github.com/hyperhq/hyperd&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;</content>
    <link href="http://wangxu.me/hyper/2016/06/28/frakti/index.html"></link>
    <author>
      <name>gnawux</name>
    </author>
  </entry>
  <entry>
    <title>RunV: 让 Docker 支持虚拟化容器</title>
    <updated>2016-06-17T15:06:08+08:00</updated>
    <id>tag:wangxu.me,2016-06-17:/hyper/2016/06/17/runv-docker-integration/index.html</id>
    <content type="html">&lt;p&gt;在此，我们很高兴地告知各位，我们已经初步完成了 runV (OCI 的基于虚拟化技术的容器运行时引擎) 与 Docker 的集成。这里，我们感谢 runV 团队的优秀工作，而且这次更新的一个特别之处在于，这些更新是由 Hyper 的开发团队和来自社区的参与者共同完成的，他们也是 runV 社区的重要部分，并在此接受致谢。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;从去年夏末 OCI （开放容器促进组织）在 Linux 基金会下成立的时候起，Hyper 的 runV 就成为了 &lt;a href=&#34;https://github.com/opencontainers/runtime-spec/blob/master/implementations.md&#34;&gt;OCI 官方的基于虚拟化技术的容器运行时引擎实现[1]&lt;/a&gt;，而另一个基于容器的实现就是 Docker 的 runC。很久以来，大家都期盼着能用 Docker 命令行同时启动 runC 和 runV 容器，不过，由于 Docker 的执行引擎在按照他们的节奏向前推进，这个愿望一直未能实现。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;今年四月，&lt;a href=&#34;[https://blog.docker.com/2016/04/docker-engine-1-11-runc/&#34;&gt;docker 发布了 1.11，集成了 containerd，连接了 runC [2]&lt;/a&gt;，这为支持更多的 runtime 铺就了道路，于是，runV 与 Docker/Containerd 的集成就再次提上了台面。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;作为基于 hypervisor 的 OCI runtime，Hyper 的 runV 与 Docker 1.11+/Containerd 的集成工作是比较容易的，&lt;a href=&#34;https://github.com/hyperhq/runv#run-it-with-docker&#34;&gt;经过简单的调试，就可以让 Docker 和 containerd 直接对接到 runv 上[3]&lt;/a&gt;。但由于 containerd 是为 runC 量身定制的， runC本身也是一个不断改进中的实现，命令行会不断变化，并且包含一些专有的特性，这个集成有不少局限，对于 tty, exec, 网络等方面的支持仍有不足。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;不过，得益于 docker/containerd 提供的良好接口，我们给出了一个对 tty, exec, 网络等方面兼容性更好的过渡方案 —— 我们在 runv 中附带了 &lt;a href=&#34;[https://github.com/hyperhq/runv/blob/master/containerd/README.md&#34;&gt;runv-containerd 程序 [4]&lt;/a&gt;，基于 containerd并针对 hypervisor 进行了一些调整， 利用 runV ，现在 docker 可以直接创建功能齐备的虚拟化容器了。&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;# in terminal #1&#xA;runv-containerd --debug --driver libvirt --kernel /opt/hyperstart/build/kernel --initrd /opt/hyperstart/build/hyper-initrd.img&#xA;# in terminal #2&#xA;docker daemon -D -l debug --containerd=/run/runv-containerd/containerd.sock&#xA;# in terminal #3 for trying it&#xA;docker run -ti busybox&#xA;# ls   # (already in the terminal of the busybox container)&#xA;# exit # (quit the container)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;未来随着 OCI/containerd/runV 的进一步发展，相信我们还可以做到更好更完美的集成。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;[1] &lt;a href=&#34;https://github.com/opencontainers/runtime-spec/blob/master/implementations.md&#34;&gt;https://github.com/opencontainers/runtime-spec/blob/master/implementations.md&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;[2] &lt;a href=&#34;https://blog.docker.com/2016/04/docker-engine-1-11-runc/&#34;&gt;https://blog.docker.com/2016/04/docker-engine-1-11-runc/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;[3] &lt;a href=&#34;https://github.com/hyperhq/runv#run-it-with-docker&#34;&gt;https://github.com/hyperhq/runv#run-it-with-docker&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;[4] &lt;a href=&#34;https://github.com/hyperhq/runv/blob/master/containerd/README.md&#34;&gt;https://github.com/hyperhq/runv/blob/master/containerd/README.md&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt; &lt;/p&gt;&#xA;</content>
    <link href="http://wangxu.me/hyper/2016/06/17/runv-docker-integration/index.html"></link>
    <author>
      <name>gnawux</name>
    </author>
  </entry>
  <entry>
    <title>浮在天空里，有些话给你</title>
    <updated>2016-06-08T05:12:08+08:00</updated>
    <id>tag:wangxu.me,2016-06-08:/family/2016/06/08/for-dad/index.html</id>
    <content type="html">&lt;p&gt;爸爸：&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2月9日，大年初二，你停下了脚步，而我们却渐行渐远。你是那个最疼我的人，我是你最后托付的人，我手上，你最后的温度不曾散释，我心里，你最后的话语萦绕未消。平日里，你好象仍然未曾远去，总觉的哪天我迈进家门，还能尝到你做的饭菜，我还会劝劝你少喝酒、少放油；而在飞机上的时候，我总觉的自己距离你更近了，几次在航班上泪流满面地回想和你在一起的点滴往事，从幼年的兔子和鹅，一直到高考时晚饭，再到五年前我从移动离职时你的话……这些，你也都不曾忘记，对么？&lt;/p&gt;&#xA;&#xA;&lt;p&gt;你离去已过百天，你最疼的屹长大了，学了新知识，学得更有自我意识了，偶尔骗骗我，把我气得半死，和我小时候一样；你那时候对我很宽容的，我们也会好好地爱他、引导他的。他偶尔也会不经意间提到你，但不会多说，他对你可能也无法释怀，你走了，这个小家伙一定很不开心。可爱的小诺诺也从刚两岁长到快两岁半了，不知道是不是感应，你发病前一天坚持想去接我和诺诺，那次没让你去，没想到就阴阳两隔了，而你离开的那天，小诺诺也高烧不退，痛苦之极；如今，她越来越懂事了，她出乎预料地不肯忘记你，你刚走那几天，她会指着很多东西说“是爷爷的”，而到最近，她还会提起“爷爷怎么不来啊，让爷爷也一起来吧”，“爷爷做菜好吃，让爷爷回来给我做菜吧”，每每引得妈妈潸然泪下。我曾经感伤“爱也会被遗忘”，有的时候却也想，遗忘可能也是对生者的保护，如果诺诺真能快点遗忘，妈妈可能也没这么伤心吧。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;说到妈妈，她还没有适应没有你的生活，没有你来给她拿主意，她似乎越来越不知道该走向哪里，我告诉她，她还可以有大约25年有质量的晚年生活，25年可以让一个婴儿成长到研究生毕业，可以和以往完全不同，可以活出更多精彩。我不知道她能听进去多少，她原来太依赖你来思考了，她不愿意接受别人的思想注入，不过我会尽力的，愿天空里的你也能帮助她度过难关。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;你走了，我也一夜长大，从前我在你的家庭里，营造我的小家庭，如今我也在家族里，试着和其他长辈们沟通，你离去的痛，和追加上的更多责任，让我更明白人生。我知道要关爱我的家庭，要关照妈妈，也要爱护自己。我会更加自律地生活，因为失去你的痛苦，让我知道，不要让爱我的人再那么早承受这份痛，相信我，我会尽力爱护你爱的人的。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;飞机已经飞过中欧，快要到达此行的目的地了，快要和你告别了，我想和你分享一段最近注意到的《爱丽丝梦游仙境2》的台词：&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;曾经以为时间是个小偷，将我们拥有的一切都偷走，从不曾给我们机会。但我们错了，她总是先给予再拿走，每一天，每一分，每一秒，都是馈赠；时间教你接受一切，爱的人就在身边，请珍惜。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;你曾经和我一起相处过三十五年，为我付出过三十五年，一起快乐地度过了三十五年，我们一起走过乡间小道也一起飞在过蓝天之中，你自己在一直打拼，也鼓励我勇敢闯荡，如今你离开我了，我在你的注视下渐行渐远，我会把你一直放在心底，永远珍藏着那充满父爱的一分一秒。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;再见，爱你，虽然这句话你没有亲耳听到让我觉得有点遗憾。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;儿 旭&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2016年6月7日于英航BA38航班上&lt;/p&gt;&#xA;</content>
    <link href="http://wangxu.me/family/2016/06/08/for-dad/index.html"></link>
    <author>
      <name>gnawux</name>
    </author>
  </entry>
  <entry>
    <title>Hyper 一岁了</title>
    <updated>2016-05-25T20:06:08+08:00</updated>
    <id>tag:wangxu.me,2016-05-25:/hyper/2016/05/25/hyper-birthday/index.html</id>
    <content type="html">&lt;p&gt;今天一早，朋飞就告诉我们，我们和 Google 合作，发在 &lt;a href=&#34;http://blog.kubernetes.io/2016/05/hypernetes-security-and-multi-tenancy-in-kubernetes.html&#34;&gt;Kubernetes 官方博客上的文章&lt;/a&gt;终于上线了，张磊和朋飞，还有 Google Kubernetes 团队的 Dawn 等朋友忙活了这么久的一件事终于在今天有了结果。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;一篇文章用了这么久，有点超出我们的预期。不过，看看本文标题，今天刚好是我们向全世界宣布开始 &lt;a href=&#34;https://github.com/hyperhq/hyperd&#34;&gt;HyperContainer&lt;/a&gt; 这个开源项目一周年，这真是个让人惊喜的生日礼物呢！&lt;/p&gt;&#xA;&#xA;&lt;p&gt;一年前，我们忐忑地宣布了这个项目，那篇 blog 在 HackerNews 首页上停了几乎一整天，有人说，如果不算中国股市的话，这是中国人头一次在 HackerNews 首页上停这么久。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;在过去的一年里，我们在 HyperContainer 之外，还发布了 RunV, Hypernetes 两个开源项目，并在上个月推出了我们的公有云服务 &lt;a href=&#34;https://www.hyper.sh&#34;&gt;Hyper_&lt;/a&gt;。这几个开源项目我都在之前的 Blog 里有过介绍，毋须多言，有兴趣的同学直接来&lt;a href=&#34;http://github.com/hyperhq/&#34;&gt;我们的 GitHub&lt;/a&gt; 看吧。&lt;/p&gt;&#xA;&#xA;&lt;p&gt;就在刚刚，我 Tag 了 HyperContainer 项目的 0.6.0 版本，作为生日祝福送给我们项目自己，感谢开发团队的努力工作，不过我们没时间停下来，在接下来的两个月里，我们还有很多事情要做&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;我们的公有云项目将会有几个比较大的功能升级，就在未来的几个星期里逐步上线，GA 就在眼前，还请各位关注。&lt;/li&gt;&#xA;&lt;li&gt;我们的 HyperContainers 项目会在未来两个月里进一步完善 API、并稳定功能，大约在8月份达到 1.0 。&lt;/li&gt;&#xA;&lt;li&gt;我们的 Hypernetes 会和 Kubernetes 继续合作，大约在秋季的时候，Kubernetes 上游会有 HyperContainer Runtime 的集成。&lt;/li&gt;&#xA;&lt;li&gt;还有更多的进展会在未来几个月里逐步推进……&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;从发布到一岁，是漫长、艰辛而又兴奋的一个过程，未来更多挑战等着我们，让我们一起加油吧！&lt;/p&gt;&#xA;</content>
    <link href="http://wangxu.me/hyper/2016/05/25/hyper-birthday/index.html"></link>
    <author>
      <name>gnawux</name>
    </author>
  </entry>
</feed>